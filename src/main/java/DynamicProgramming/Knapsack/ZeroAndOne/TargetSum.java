package DynamicProgramming.Knapsack.ZeroAndOne;

/**
 * 和为sum的方法数 蓝湖 笔试题 2021.07.18
 *
 * 给定一个有n个正整数的数组A和一个整数sum,求选择数组A中部分数字和为sum的方案数。
 * 当两种选取方案有一个数字的下标不一样,我们就认为是不同的组成方案。
 *
 * 输入为两行: 第一行为两个正整数n(1 ≤ n ≤ 1000)，sum(1 ≤ sum ≤ 1000) 第二行为n个正整数A[i](32位整数)，以空格隔开。
 *
 * 才写的背包问题，结果居然没有看出来，从n个里选若干个，问方案数，这不是典型的背包问题吗。。。
 * 只能说在家状态不好吧。。。 并且题目说两个数字下标不一样就认为是不同的组成方案，这个就给了是说明题目可以
 * 转换为0-1背包。
 *
 * 当然如果看成是组合/子集问题也OK，那其实还更简单，不需要去重的。
 */
public class TargetSum {
    // 具体代码参考 494. 目标和 Median，几乎一模一样。
}
